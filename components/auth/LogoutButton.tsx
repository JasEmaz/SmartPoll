'use client';\n\nimport { useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { LogOut } from 'lucide-react';\nimport { signOut } from '@/lib/supabase';\n\n/**\n * SECURITY FEATURES:\n * \n * 1. SECURE LOGOUT: Clears all cookies and sessions\n * 2. CLIENT-SIDE CLEANUP: Removes any cached data\n * 3. FORCED REDIRECT: Ensures user is redirected to login\n * 4. ERROR HANDLING: Graceful handling of logout failures\n */\n\nexport function LogoutButton() {\n  const [isLoggingOut, setIsLoggingOut] = useState(false);\n\n  const handleLogout = async () => {\n    setIsLoggingOut(true);\n    \n    try {\n      await signOut();\n      // signOut() handles the redirect\n    } catch (error) {\n      console.error('Logout error:', error);\n      // Force redirect even if logout fails\n      window.location.href = '/auth/login';\n    }\n  };\n\n  return (\n    <Button\n      variant=\"outline\"\n      size=\"sm\"\n      onClick={handleLogout}\n      disabled={isLoggingOut}\n      className=\"flex items-center gap-2\"\n    >\n      <LogOut className=\"h-4 w-4\" />\n      {isLoggingOut ? 'Logging out...' : 'Logout'}\n    </Button>\n  );\n}"
